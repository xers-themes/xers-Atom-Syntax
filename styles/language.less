.syntax--constant {
  color: @orange;

  &.syntax--character {
    &.syntax--escape {
      color: @cyan;
    }
  }

  &.syntax--other {
    &.syntax--color {
      color: @cyan;
    }

    &.syntax--symbol {
      color: @green;
    }
  }
}

.syntax--flowtype {
  &.syntax--class.syntax--support {
    color: @yellow;
  }

  &.syntax--primitive, &.syntax--builtin, &.syntax--existential {
    color: @yellow;
  }
}

.syntax--meta.syntax--flowtype {
  .syntax--type.syntax--storage.syntax--function {
    color: @foreground;
  }
}

.syntax--jsx {
  &.syntax--component.syntax--class {
    color: @red;
  }
}

.syntax--entity {
  &.syntax--name {
    &.syntax--section {
      color: @blue;
    }

    &.syntax--tag {
      color: @red;
    }

    &.syntax--type {
    }
  }

  &.syntax--other {
    &.syntax--attribute-name {
      color: @orange;

      &.syntax--id {
        color: @blue;
      }
    }

    &.syntax--inherited-class {
      color: @green;
    }
  }
}

.syntax--invalid.syntax--illegal {
  color: @background-color;
  background-color: @red;
}

.syntax--keyword {
  color: @pink;

  &.syntax--operator {
    color: @foreground;
  }

  &.syntax--module.syntax--js {
    color: @cyan;
  }

  &.syntax--other {
    &.syntax--special-method {
      color: @blue;
    }

    &.syntax--unit {
      color: @orange;
    }
  }
}

.syntax--markup {
  &.syntax--bold {
    font-weight: bold;
    color: @yellow;
  }

  &.syntax--changed {
    color: @pink;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--italic {
    font-style: italic;
    color: @pink;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw {
    &.syntax--inline {
      color: @green;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @white-2;
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @pink;
  }

  &.syntax--separator {
    color: @foreground;
    ckground:color, @gray-2;
  }
}

.syntax--none {
  color: @foreground;
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--array,
    &.syntax--parameters,
    &.syntax--string,
    &.syntax--variable {
      color: @foreground;
    }

    &.syntax--bold {
      font-weight: bold;
      color: @yellow;
    }

    &.syntax--entity {
      color: @blue;
    }

    &.syntax--italic {
      font-style: italic;
      color: @pink;
    }
  }

  &.syntax--section {
    &.syntax--embedded {
      color: @brown;
    }
  }
}

.syntax--storage {
  color: @pink;
}

.syntax--string {
  color: @green;

  &.syntax--other {
    &.syntax--link {
      color: @red;
    }
  }

  &.syntax--regexp {
    color: @cyan;
  }
}

.syntax--support {
  &.syntax--function {
    color: @cyan;

    &.syntax--any-method {
      color: @blue;
    }
  }

  &.syntax--module {
    .syntax--keyword.syntax--operator {
      color: @yellow;
    }
  }
}

.syntax--variable {
  &.syntax--interpolation {
    color: @brown;
  }

  &.syntax--parameter {
    &.syntax--function {
      color: @foreground;
    }
  }
}





// Bracket matcher
atom-text-editor .bracket-matcher .region {
  background: mix(@bracket-matcher-border-color, @background-color, 50%);
	border: none;
	box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.3);
}

// Comments
.syntax--comment {
  color: @syntax-comment-color;
	font-style: @syntax-comment-font-style;
}


// Keywords
.syntax--storage,
.syntax--console,
.syntax--builtin,
.syntax--keyword {
	color: @syntax-keyword-color;
	font-style: @syntax-keyword-font-style;

	&.syntax--operator {
		color: @syntax-method-color;
	}

	&.syntax--arithmetic, &.syntax--assignment, &.syntax--relational, &.syntax--logical, &.syntax--comparison {
		font-style: normal;
		color: @foreground;
	}
}


// variable and constants
.syntax--variable {
	color: @syntax-variable-color;
}

// Functions
.syntax--function {
	&.syntax--name {
		color: @syntax-function-color;
	}
	&.syntax--parameters > .syntax--variable {
		color: @syntax-parameters-color;
	}
}
.syntax--function-call > .syntax--function {
	color: @syntax-method-color;
	font-weight: @syntax-method-font-weight;
	font-style: @syntax-method-font-style;
}

// Object stuff
.syntax--property {
	color: @syntax-property-color;
}
.syntax--method-call > .syntax--function,
.syntax--console.syntax--function {
	color: @syntax-method-color;
	font-weight: @syntax-method-font-weight;
	font-style: @syntax-method-font-style;
}
.syntax--with-arguments > .syntax--variable {
	color: @syntax-parameters-color;
}
.syntax--key > .syntax--unquoted {
	color: @syntax-property-color;
}

// String
.syntax--string {
	color: @syntax-string-color;
}

// Boolean
.syntax--boolean {
	color: @syntax-boolean-color;
	font-style: @syntax-boolean-font-style;
}

// Null and Undefined
.syntax--null {
	color: @syntax-null-color;
	font-style: @syntax-null-font-style;
}

// Class
.syntax--class {
	color: @syntax-class-color;
}

// Numbers
.syntax--numeric {
	color: @syntax-number-color;
}
