.syntax--flowtype {
  &.syntax--class.syntax--support {
    color: @yellow;
  }

  &.syntax--primitive, &.syntax--builtin, &.syntax--existential {
    color: @yellow;
  }
}

.syntax--meta.syntax--flowtype {
  .syntax--type.syntax--storage.syntax--function {
    color: @foreground;
  }
}

.syntax--jsx {
  &.syntax--component.syntax--class {
    color: @red;
  }
}

.syntax--invalid.syntax--illegal {
  color: @background-color;
  background-color: @red;
}

.syntax--markup {
  &.syntax--bold {
    font-weight: bold;
    color: @yellow;
  }

  &.syntax--changed {
    color: @pink;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--italic {
    font-style: italic;
    color: @pink;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw {
    &.syntax--inline {
      color: @green;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @white-2;
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @pink;
  }

  &.syntax--separator {
    color: @foreground;
    ckground:color, @gray-2;
  }
}

.syntax--none {
  color: @foreground;
}



// Bracket matcher
atom-text-editor .bracket-matcher .region {
  background: mix(@bracket-matcher-border-color, @background-color, 50%);
	border: none;
	box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.3);
}

// General
// Punctuattion
.syntax--punctuation {
	color: @foreground;
}
// Comments
.syntax--comment {
  color: @syntax-comment-color;
	font-style: @syntax-comment-font-style;
}
.syntax--storage,
.syntax--console,
.syntax--builtin,
.syntax--keyword,
.syntax--prototype,
.syntax--prototype.syntax--variable, {
	color: @syntax-js-keyword-color;
	font-style: @syntax-js-keyword-font-style;
	&.syntax--operator {
		color: @syntax-js-method-color;
	}
	&.syntax--arithmetic, &.syntax--assignment, &.syntax--relational, &.syntax--logical, &.syntax--comparison {
		font-style: normal;
		color: @foreground;
	}
}
// variable and constants
.syntax--variable {
	color: @syntax-js-variable-color;
}
// Functions
.syntax--function {
	&.syntax--name {
		color: @syntax-js-function-color;
	}
	&.syntax--parameters > .syntax--variable {
		color: @syntax-js-parameters-color;
	}
}
.syntax--function-call > .syntax--function {
	color: @syntax-js-method-color;
	font-weight: @syntax-js-method-font-weight;
	font-style: @syntax-js-method-font-style;
}
// Object stuff
.syntax--property {
	color: @syntax-js-property-color;
}
.syntax--method-call > .syntax--function,
.syntax--console.syntax--function {
	color: @syntax-js-method-color;
	font-weight: @syntax-js-method-font-weight;
	font-style: @syntax-js-method-font-style;
}
.syntax--with-arguments > .syntax--variable {
	color: @syntax-js-parameters-color;
}
.syntax--key > .syntax--unquoted {
	color: @syntax-js-property-color;
}
// String
.syntax--string {
	color: @syntax-js-string-color;
}
// Boolean
.syntax--boolean {
	font-style: @syntax-js-boolean-font-style;
	&.syntax--true {
			color: @syntax-js-boolean-true-color;
	}
	&.syntax--false {
		color: @syntax-js-boolean-false-color;
	}
}
// Null and Undefined
.syntax--null, .syntax--undefined {
	color: @syntax-js-null-color;
	font-style: @syntax-js-null-font-style;
}
// Class
.syntax--class {
	color: @syntax-js-class-color;
}
// Numbers
.syntax--numeric {
	color: @syntax-js-number-color;
}
.syntax--import {
	& .syntax--string {
		color: @syntax-css-import-src;
	}
}



// JS
.syntax--js {
	// Keywords
	&.syntax--storage,
	&.syntax--console,
	&.syntax--builtin,
	&.syntax--keyword,
	&.syntax--prototype,
	&.syntax--prototype.syntax--variable, {
		color: @syntax-js-keyword-color;
		font-style: @syntax-js-keyword-font-style;
		&.syntax--operator {
			color: @syntax-js-method-color;
		}
		&.syntax--arithmetic, &.syntax--assignment, &.syntax--relational, &.syntax--logical, &.syntax--comparison {
			font-style: normal;
			color: @foreground;
		}
	}
	// variable and constants
	&.syntax--variable {
		color: @syntax-js-variable-color;
	}
	// Functions
	&.syntax--function {
		&.syntax--name {
			color: @syntax-js-function-color;
		}
		&.syntax--parameters > .syntax--variable {
			color: @syntax-js-parameters-color;
		}
	}
	&.syntax--function-call > .syntax--function {
		color: @syntax-js-method-color;
		font-weight: @syntax-js-method-font-weight;
		font-style: @syntax-js-method-font-style;
	}
	&.syntax--function > .syntax--object + .syntax--accessor + .syntax--function {
		color: @syntax-js-method-color;
		font-weight: @syntax-js-method-font-weight;
		font-style: @syntax-js-method-font-style;
	}
	// Object stuff
	&.syntax--property {
		color: @syntax-js-property-color;
	}
	&.syntax--method-call > .syntax--function,
	&.syntax--console.syntax--function {
		color: @syntax-js-method-color;
		font-weight: @syntax-js-method-font-weight;
		font-style: @syntax-js-method-font-style;
	}
	&.syntax--with-arguments > .syntax--variable {
		color: @syntax-js-parameters-color;
	}
	&.syntax--key > .syntax--unquoted {
		color: @syntax-js-property-color;
	}
	// String
	&.syntax--string {
		color: @syntax-js-string-color;
	}
	// Boolean
	&.syntax--boolean {
	}
	// Null and Undefined
	&.syntax--null, .syntax--undefined {
		color: @syntax-js-null-color;
		font-style: @syntax-js-null-font-style;
	}
	// Class
	&.syntax--class {
		color: @syntax-js-class-color;
	}
	// Numbers
	&.syntax--numeric {
		color: @syntax-js-number-color;
	}
}

// CSS
.syntax--css, .syntax--scss, .syntax--less, .syntax--sass {
	&:before {
		font-style: normal;
	}
	// Selectors
	&.syntax--class,
	&.syntax--property-list > .syntax--attribute-name > .syntax--definition,
	&.syntax--reference {
		color: @syntax-css-class-color;
	}
	&.syntax--reference {
		color: @syntax-css-refrence-color;
	}
	&.syntax--tag {
		color: @syntax-css-tag-color;
	}
	&.syntax--pseudo-class, &.syntax--pseudo-element {
		color: @syntax-css-psedo-class-color;
		font-style: @syntax-css-psedo-class-font-style;
		> .syntax--punctuation {
			color: @syntax-css-psedo-class-color;
			font-style: normal;
		}
	}
	// Placeholders
	&.syntax--placeholder-selector {
		color: @syntax-variable-color;
	}
	// Property
	&.syntax--property-name {
		color: @syntax-css-property-color;
	}
	&.syntax--font-name {
		color: @syntax-css-value-quoted-color;
	}
	&.syntax--property-value {
		color: @syntax-css-value-color;
		> .syntax--numeric {
			color: @syntax-css-value-numberic-color;
		}
		> .syntax--quoted {
			color: @syntax-css-value-quoted-color;
		}
	}
	// Important
	&.syntax--important {
		font-weight: @syntax-css-important-font-weight;
		color: @syntax-css-important-color;
		text-decoration: @syntax-css-important-text-decoration;
	}
	// AtRules
	&.syntax--at-rule {
		color: @syntax-function-color;
		font-weight: @syntax-function-call-font-weight;
		font-style: normal;
	}
	&.syntax--import {
		> .syntax--quoted {
			color: @syntax-css-import-src;
			font-style: normal;
		}
		> .syntax--string {
			color: @syntax-css-import-src;
		}
	}
	&.syntax--mixin {
		> .syntax--variable {
			color: @syntax-parameters-color;
		}
	}
	// Functions
	&.syntax--function {
		&.syntax--misc {
			color: @syntax-function-call-color;
			font-weight: @syntax-method-font-weight;
			font-style: @syntax-method-font-style;
		}
		~ .syntax--variable {
			color: @syntax-parameters-color;
		}
	}
	&.syntax--any-method {
		color: @syntax-function-call-color;
		font-weight: @syntax-function-call-font-weight;
		font-style: @syntax-function-call-font-style;
	}
}


// html
.syntax--html {
	&.syntax--doctype {
		color: @syntax-html-doctype-color;
	}
	.syntax--tag:not(.syntax--doctype):not(.syntax--scss) {
		color: @syntax-tag-color;
	}
	.syntax--attribute-name:not(.syntax--css) {
		color: @syntax-html-attribute-color;
	}
	.syntax--punctuation:not(.syntax--css) {
		color: @foreground-color;
	}
	.syntax--directive {
		color: @syntax-html-directive-color;
	}
	.syntax--quoted {
		color: @syntax-html-attribute-value-color;
	}
}
